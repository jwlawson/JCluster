/**
 * Copyright 2014 John Lawson
 * 
 * DynkinDiagram.java is part of JCluster.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package uk.co.jwlawson.jcluster;

/**
 * @author John Lawson
 * 
 */
public enum DynkinDiagram {
	//@formatter:off
	A2(2, 0,1,-1,0),
	A3(3, 	 0, 1, 0,
			-1, 0, 1,
			 0,-1, 0),
	A4(4, 	 0, 1, 0, 0,
			-1, 0, 1, 0,
			 0,-1, 0, 1,
			 0, 0,-1, 0),
	A5(5, 	 0, 1, 0, 0, 0, 
			-1, 0, 1, 0, 0,
			 0,-1, 0, 1, 0,
			 0, 0,-1, 0, 1,
			 0, 0, 0,-1, 0),
	A6(6, 	 0, 1, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0,
			 0,-1, 0, 1, 0, 0,
			 0, 0,-1, 0, 1, 0, 
			 0, 0, 0,-1, 0, 1,
			 0, 0, 0, 0,-1, 0),
	A7(7, 	 0, 1, 0, 0, 0, 0, 0, 
			-1, 0, 1, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0,
			 0, 0,-1, 0, 1, 0, 0,
			 0, 0, 0,-1, 0, 1, 0,
			 0, 0, 0, 0,-1, 0, 1,
			 0, 0, 0, 0, 0,-1, 0),
	A8(8, 	 0, 1, 0, 0, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0, 0, 
			 0, 0,-1, 0, 1, 0, 0, 0, 
			 0, 0, 0,-1, 0, 1, 0, 0, 
			 0, 0, 0, 0,-1, 0, 1, 0, 
			 0, 0, 0, 0, 0,-1, 0, 1, 
			 0, 0, 0, 0, 0, 0,-1, 0),
	A9(9,  	 0, 1, 0, 0, 0, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0, 0, 0,
			 0, 0,-1, 0, 1, 0, 0, 0, 0,
			 0, 0, 0,-1, 0, 1, 0, 0, 0,
			 0, 0, 0, 0,-1, 0, 1, 0, 0,
			 0, 0, 0, 0, 0,-1, 0, 1, 0,
			 0, 0, 0, 0, 0, 0,-1, 0, 1,
			 0, 0, 0, 0, 0, 0, 0,-1, 0 ),
	B2(2, 0,2,-2,0),
	B3(3,	 0, 1, 0,
			-1, 0, 2,
			 0,-2, 0),
	B4(4,	 0, 1, 0, 0,
			-1, 0, 1, 0,
			 0,-1, 0, 2,
			 0, 0,-2, 0),
	B5(5, 	 0, 1, 0, 0, 0, 
			-1, 0, 1, 0, 0,
			 0,-1, 0, 1, 0,
			 0, 0,-1, 0, 2,
			 0, 0, 0,-2, 0),
	B6(6, 	 0, 1, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0,
			 0,-1, 0, 1, 0, 0,
			 0, 0,-1, 0, 1, 0, 
			 0, 0, 0,-1, 0, 2,
			 0, 0, 0, 0,-2, 0),
	B7(7, 	 0, 1, 0, 0, 0, 0, 0, 
			-1, 0, 1, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0,
			 0, 0,-1, 0, 1, 0, 0,
			 0, 0, 0,-1, 0, 1, 0,
			 0, 0, 0, 0,-1, 0, 2,
			 0, 0, 0, 0, 0,-2, 0),
	B8(8, 	 0, 1, 0, 0, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0, 0, 
			 0, 0,-1, 0, 1, 0, 0, 0, 
			 0, 0, 0,-1, 0, 1, 0, 0, 
			 0, 0, 0, 0,-1, 0, 1, 0, 
			 0, 0, 0, 0, 0,-1, 0, 2, 
			 0, 0, 0, 0, 0, 0,-2, 0),
	B9(9,  	 0, 1, 0, 0, 0, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0, 0, 0,
			 0, 0,-1, 0, 1, 0, 0, 0, 0,
			 0, 0, 0,-1, 0, 1, 0, 0, 0,
			 0, 0, 0, 0,-1, 0, 1, 0, 0,
			 0, 0, 0, 0, 0,-1, 0, 1, 0,
			 0, 0, 0, 0, 0, 0,-1, 0, 2,
			 0, 0, 0, 0, 0, 0, 0,-2, 0 ),
	D4(4, 	 0, 1, 0, 0,
			-1, 0, 1, 1,
			 0,-1, 0, 0,
			 0,-1, 0, 0),
	D5(5, 	 0, 1, 0, 0, 0,
			-1, 0, 1, 0, 0,
			 0,-1, 0, 1, 1,
			 0, 0,-1, 0, 0,
			 0, 0,-1, 0, 0),
	D6(6, 	 0, 1, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0,
			 0,-1, 0, 1, 0, 0,
			 0, 0,-1, 0, 1, 1,
			 0, 0, 0,-1, 0, 0,
			 0, 0, 0,-1, 0, 0),
	D7(7, 	 0, 1, 0, 0, 0, 0, 0, 
			-1, 0, 1, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0,
			 0, 0,-1, 0, 1, 0, 0,
			 0, 0, 0,-1, 0, 1, 1,
			 0, 0, 0, 0,-1, 0, 0,
			 0, 0, 0, 0,-1, 0, 0),
	D8(8, 	 0, 1, 0, 0, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0, 0, 
			 0, 0,-1, 0, 1, 0, 0, 0, 
			 0, 0, 0,-1, 0, 1, 0, 0, 
			 0, 0, 0, 0,-1, 0, 1, 1, 
			 0, 0, 0, 0, 0,-1, 0, 0, 
			 0, 0, 0, 0, 0,-1, 0, 0),
	D9(9,  	 0, 1, 0, 0, 0, 0, 0, 0, 0,
			-1, 0, 1, 0, 0, 0, 0, 0, 0, 
			 0,-1, 0, 1, 0, 0, 0, 0, 0,
			 0, 0,-1, 0, 1, 0, 0, 0, 0,
			 0, 0, 0,-1, 0, 1, 0, 0, 0,
			 0, 0, 0, 0,-1, 0, 1, 0, 0,
			 0, 0, 0, 0, 0,-1, 0, 1, 1,
			 0, 0, 0, 0, 0, 0,-1, 0, 0,
			 0, 0, 0, 0, 0, 0,-1, 0, 0 ),;
	
	//@formatter:on
	private final QuiverMatrix matrix;

	private DynkinDiagram(int size, double... data) {
		matrix = new QuiverMatrix(size, size, data);
	}

	public QuiverMatrix getMatrix() {
		return matrix;
	}
}
